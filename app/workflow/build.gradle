plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.dddjava.jig-gradle-plugin' version '2023.3.1'
}

sourceSets {
    main {
        resources.srcDirs = ["src/main/java", "src/main/resources"]
    }
    test {
        resources.srcDirs = ["src/test/java", "src/test/resources"]
    }
}

group = 'workflow'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'

    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.github.irof:jig-erd:latest.release'


    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    runtimeOnly 'io.opentelemetry:opentelemetry-exporter-zipkin'
}

tasks.named('test') {
    useJUnitPlatform()
}

[compileJava, processResources]*.shouldRunAfter(clean)
jigReports.dependsOn(clean, classes)